apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'idea'

ext {
    jmonkeyengine_version = '3.3.2-stable'
    license = file("$rootDir/license.txt")
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
    }
}

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = 'toniarts.openkeeper.Main'
}
mainClassName = ext.mainClass

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task(debug, dependsOn: classes, type: JavaExec) {
    main = getProperty('mainClass')
    classpath = sourceSets.main.runtimeClasspath
    if (project.hasProperty('args')) {
        args(project.getAt('args').split(','))
    }
    standardInput = System.in
    ignoreExitValue = true
    debug true
}

artifacts {
    archives sourcesJar
    //	archives javadocJar
}

configurations.all {
    resolutionStrategy.dependencySubstitution {
        substitute module('com.github.nifty-gui:nifty') with module('com.github.tonihele.nifty-gui:nifty:1.4-SNAPSHOT')
        substitute module('com.github.nifty-gui:nifty-default-controls') with module('com.github.tonihele.nifty-gui:nifty-default-controls:1.4-SNAPSHOT')
        substitute module('com.github.nifty-gui:nifty-style-black') with module('com.github.tonihele.nifty-gui:nifty-style-black:1.4-SNAPSHOT')
    }
}

dependencies {
    implementation fileTree(dir: 'lib', include: ['*.jar'])
    implementation "org.jmonkeyengine:jme3-core:$jmonkeyengine_version"
    implementation "org.jmonkeyengine:jme3-plugins:$jmonkeyengine_version"
    implementation "org.jmonkeyengine:jme3-effects:$jmonkeyengine_version"
    implementation "org.jmonkeyengine:jme3-networking:$jmonkeyengine_version"
    implementation "org.jmonkeyengine:jme3-lwjgl3:$jmonkeyengine_version"
    implementation "org.jmonkeyengine:jme3-niftygui:$jmonkeyengine_version"
    implementation "com.badlogicgames.gdx:gdx-ai:1.8.2"
    implementation "javax.vecmath:vecmath:1.5.2"
    implementation "com.simsilica:zay-es:1.3.2"
    implementation "com.simsilica:zay-es-net:1.4.3"
    implementation "com.simsilica:sio2:1.5.0"
    implementation "com.simsilica:sim-ethereal:1.5.0"
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDirs 'assets'
            exclude 'Converted/**'
        }
    }
}


eclipse {
    classpath {
        downloadSources=true
    }
    project {
        natures 'org.springsource.ide.eclipse.gradle.core.nature'
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

compileJava {
    // We have annotation processors in log4j, only needed for writing plugins, disable the warnings
    options.compilerArgs += ["-proc:none"]
    //options.compilerArgs += ["-Xlint:deprecation"]
    //options.compilerArgs += ["-Xlint:unchecked"]
}

wrapper {
    gradleVersion = '6.7.1'
}
